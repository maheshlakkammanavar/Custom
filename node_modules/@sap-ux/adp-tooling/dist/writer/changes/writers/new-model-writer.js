"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NewModelWriter = void 0;
const project_access_1 = require("@sap-ux/project-access");
const change_utils_1 = require("../../../base/change-utils");
/**
 * Handles the creation and writing of new sapui5 model data changes for a project.
 */
class NewModelWriter {
    fs;
    projectPath;
    /**
     * @param {Editor} fs - The filesystem editor instance.
     * @param {string} projectPath - The root path of the project.
     */
    constructor(fs, projectPath) {
        this.fs = fs;
        this.projectPath = projectPath;
    }
    /**
     * Constructs the content for an new model change based on provided data.
     *
     * @param {NewModelAnswers} data - The answers object containing information needed to construct the content property.
     * @returns {object} The constructed content object for the new model change.
     */
    constructContent({ name, uri, addAnnotationMode, dataSourceName, modelName, modelSettings, version, dataSourceURI, annotationSettings }) {
        const content = {
            dataSource: {
                [name]: {
                    uri,
                    type: 'OData',
                    settings: {
                        odataVersion: version
                    }
                }
            },
            model: {
                [modelName]: {
                    dataSource: name
                }
            }
        };
        if (modelSettings && modelSettings.length !== 0) {
            content.model[modelName].settings = (0, change_utils_1.parseStringToObject)(modelSettings);
        }
        if (addAnnotationMode) {
            content.dataSource[name].settings.annotations = [`${dataSourceName}`];
            content.dataSource[dataSourceName] = {
                uri: dataSourceURI,
                type: 'ODataAnnotation'
            };
            if (annotationSettings && annotationSettings.length !== 0) {
                content.dataSource[dataSourceName].settings = (0, change_utils_1.parseStringToObject)(annotationSettings);
            }
        }
        return content;
    }
    /**
     * Writes the new model change to the project based on the provided data.
     *
     * @param {NewModelData} data - The new model data containing all the necessary information to construct and write the change.
     * @returns {Promise<void>} A promise that resolves when the change writing process is completed.
     */
    async write(data) {
        const timestamp = Date.now();
        const content = this.constructContent(data.answers);
        const change = (0, change_utils_1.getChange)(data.variant, timestamp, content, "appdescr_ui5_addNewModel" /* ChangeType.ADD_NEW_MODEL */);
        (0, change_utils_1.writeChangeToFolder)(this.projectPath, change, `id_${timestamp}_addNewModel.change`, this.fs, project_access_1.DirName.Manifest);
    }
}
exports.NewModelWriter = NewModelWriter;
//# sourceMappingURL=new-model-writer.js.map